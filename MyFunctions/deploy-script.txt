#!/bin/bash

# Major Metals CRM - Azure Functions Deployment Script
# This script automates the deployment of the Azure Functions backend

set -e  # Exit on any error

# Configuration variables
RESOURCE_GROUP="rg-majormetals-crm"
FUNCTION_APP="func-majormetals-crm"
STORAGE_ACCOUNT="stmajormetalscrm"
LOCATION="eastus"
SQL_SERVER="sql-majormetals-crm"
SQL_DATABASE="MajorMetalsCRM"

# Database credentials (from your configuration)
DB_USER="CRM"
DB_PASSWORD="hnjg809347q50chngsad.,@*FGG##ssd1123"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Major Metals CRM - Azure Functions Deployment${NC}"
echo "=================================================="

# Check if Azure CLI is installed
if ! command -v az &> /dev/null; then
    echo -e "${RED}‚ùå Azure CLI is not installed. Please install it first.${NC}"
    exit 1
fi

# Check if Azure Functions Core Tools is installed
if ! command -v func &> /dev/null; then
    echo -e "${RED}‚ùå Azure Functions Core Tools is not installed. Please install it first.${NC}"
    exit 1
fi

# Check if user is logged in to Azure
echo -e "${BLUE}üîê Checking Azure login status...${NC}"
if ! az account show &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Not logged into Azure. Please log in.${NC}"
    az login
fi

# Get current subscription
SUBSCRIPTION=$(az account show --query name -o tsv)
echo -e "${GREEN}‚úÖ Using subscription: $SUBSCRIPTION${NC}"

# Create resource group if it doesn't exist
echo -e "${BLUE}üì¶ Creating resource group...${NC}"
if az group exists --name $RESOURCE_GROUP | grep -q false; then
    az group create --name $RESOURCE_GROUP --location $LOCATION
    echo -e "${GREEN}‚úÖ Resource group created${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Resource group already exists${NC}"
fi

# Create storage account if it doesn't exist
echo -e "${BLUE}üíæ Creating storage account...${NC}"
if ! az storage account show --name $STORAGE_ACCOUNT --resource-group $RESOURCE_GROUP &> /dev/null; then
    az storage account create \
        --name $STORAGE_ACCOUNT \
        --location $LOCATION \
        --resource-group $RESOURCE_GROUP \
        --sku Standard_LRS
    echo -e "${GREEN}‚úÖ Storage account created${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Storage account already exists${NC}"
fi

# Create function app if it doesn't exist
echo -e "${BLUE}‚ö° Creating Function App...${NC}"
if ! az functionapp show --name $FUNCTION_APP --resource-group $RESOURCE_GROUP &> /dev/null; then
    az functionapp create \
        --resource-group $RESOURCE_GROUP \
        --consumption-plan-location $LOCATION \
        --runtime node \
        --runtime-version 18 \
        --functions-version 4 \
        --name $FUNCTION_APP \
        --storage-account $STORAGE_ACCOUNT
    echo -e "${GREEN}‚úÖ Function App created${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Function App already exists${NC}"
fi

# Configure CORS
echo -e "${BLUE}üåê Configuring CORS...${NC}"
az functionapp cors add \
    --name $FUNCTION_APP \
    --resource-group $RESOURCE_GROUP \
    --allowed-origins "*"

# Configure app settings
echo -e "${BLUE}‚öôÔ∏è  Configuring app settings...${NC}"
az functionapp config appsettings set \
    --name $FUNCTION_APP \
    --resource-group $RESOURCE_GROUP \
    --settings \
    "DB_USER=$DB_USER" \
    "DB_PASSWORD=$DB_PASSWORD" \
    "DB_SERVER=$SQL_SERVER.database.windows.net" \
    "DB_NAME=$SQL_DATABASE" \
    "SQL_CONNECTION_STRING=Server=$SQL_SERVER.database.windows.net;Database=$SQL_DATABASE;User ID=$DB_USER;Password=$DB_PASSWORD;Encrypt=true;Connection Timeout=30;" \
    --output none

echo -e "${GREEN}‚úÖ App settings configured${NC}"

# Install npm dependencies
echo -e "${BLUE}üì¶ Installing npm dependencies...${NC}"
npm install

# Deploy the functions
echo -e "${BLUE}üöÄ Deploying functions to Azure...${NC}"
func azure functionapp publish $FUNCTION_APP

# Get the function app URL
FUNCTION_URL=$(az functionapp show --name $FUNCTION_APP --resource-group $RESOURCE_GROUP --query defaultHostName -o tsv)

echo -e "${GREEN}‚úÖ Deployment complete!${NC}"
echo ""
echo -e "${BLUE}üìã Deployment Summary:${NC}"
echo "======================="
echo -e "Function App URL: ${GREEN}https://$FUNCTION_URL${NC}"
echo -e "API Base URL: ${GREEN}https://$FUNCTION_URL/api${NC}"
echo -e "Health Check: ${GREEN}https://$FUNCTION_URL/api/health${NC}"
echo ""
echo -e "${BLUE}üìä Database Configuration:${NC}"
echo "========================="
echo "Server: $SQL_SERVER.database.windows.net"
echo "Database: $SQL_DATABASE"
echo "User: $DB_USER"
echo ""
echo -e "${YELLOW}üîß Next Steps:${NC}"
echo "1. Update your frontend index.html with the API URL:"
echo "   this.AZURE_API_BASE = 'https://$FUNCTION_URL/api';"
echo "2. Test the health endpoint to verify connectivity"
echo "3. Monitor the functions in Azure Portal"
echo ""
echo -e "${GREEN}üéâ Your Major Metals CRM backend is ready!${NC}"